@*@model BabyFeedingRecordWebApplication.Models.FeedingRecordComponentSet*@
@model IEnumerable<BabyFeedingRecordWebApplication.Models.FeedingRecord>
@inject IHttpContextAccessor Accessor
@{

    ViewData["Title"] = "Index";
    int totalPageNo=1;
    int currPage = 1;
    string? totalPageNoStr = ViewData["totalPageNo"].ToString();
    int.TryParse(totalPageNoStr, out totalPageNo);
    int.TryParse(ViewData["currPageNo"].ToString(), out currPage);
    DateTime currDt;
    if (Model.Count() == 0)
        currDt = new DateTime();
    else
        currDt = Model.First().FeedingTime;


    string styleColor1 = "background-color:white";
    string styleColor2 = "background-color:azure";
    string selectedStyleColor = styleColor1;
    bool LogInstatus=false;
    if (Accessor.HttpContext!=null)
    {
        if (Accessor.HttpContext.Session.GetInt32("LoginStatus") == 0)
            LogInstatus = true;
    }

}

<h1>FeedingRecords</h1>



@if (LogInstatus)
{
    <p><a asp-action="Logout">Logout</a></p>
    <p><a asp-action="Create">Create New</a></p>

}
else
{
    <p> <a asp-action="Login" asp-controller="Account" asp-route-ctrl="FeedingRecords" asp-route-actn="Index">Login</a></p>


}
<p>current time: @DateTime.Now</p>
<p> 
    
    @for(int pageNo=0;pageNo<totalPageNo; pageNo++)
    {
        if((@pageNo+1)==currPage){
            <label>[@currPage]</label>
        }
        else{
        <a asp-action="Index" asp-route-startIndex=@(pageNo+1)>@(pageNo+1)</a>
    
        }
    }

</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FeedingTime)
            </th>
            <th>
              
                @Html.DisplayNameFor(model => model.MotherMilkVolume)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FormularMilkVolume)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BabyFoodVolume)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Memo)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>


@foreach (var item in Model) {

            if (currDt.Day != item.FeedingTime.Day)
            {
                if (selectedStyleColor == styleColor1) 
                    selectedStyleColor = styleColor2;
                else 
                    selectedStyleColor = styleColor1;
                currDt = item.FeedingTime;
            }

            <tr>

                <td style=@selectedStyleColor>
                @Html.DisplayFor(modelItem => item.FeedingTime)
            </td>
                <td style=@selectedStyleColor>
                @Html.DisplayFor(modelItem => item.MotherMilkVolume)
            </td>
                <td style=@selectedStyleColor>
                @Html.DisplayFor(modelItem => item.FormularMilkVolume)
            </td>
                <td style=@selectedStyleColor>
                    @Html.DisplayFor(modelItem => item.BabyFoodVolume)
                </td>

                <td style=@selectedStyleColor>
                @Html.DisplayFor(modelItem => item.Memo)
                  
                   </td>
                @if (LogInstatus)
                {
                        <td style=@selectedStyleColor>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                @*<a asp-action="Details" asp-route-id="@item.Id">Details</a> |*@
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
                }
        </tr>
}
    </tbody>
</table>
